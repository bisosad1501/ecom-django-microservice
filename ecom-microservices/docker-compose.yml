services:

  # frontend:
    # image: nginx:alpine
    # ports:
      # - "3001:80"
    # volumes:
      # - ./frontend/build:/usr/share/nginx/html
    # networks:
      # - ecom-net
    # command: [ nginx-debug, '-g', 'daemon off;' ]

  ecom-frontend:
    build: ./ecom-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./ecom-frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=/api
    networks:
      - ecom-net
    depends_on:
      - api-gateway

  api-gateway:
    build: ./api-gateway
    ports:
      - "80:80"
    depends_on:
      - customer-service
      - book-service
      - cart-service
      - review-service
      - product-service
      - shoe-service
      - order-service
      - payment-service
      - shipment-service
      - sentiment-service
      - recommendation-service
    environment:
      - CUSTOMER_SERVICE=customer-service
      - BOOK_SERVICE=book-service
      - CART_SERVICE=cart-service
      - REVIEW_SERVICE=review-service
      - PRODUCT_SERVICE=product-service
      - SHOE_SERVICE=shoe-service
      - ORDER_SERVICE=order-service
      - PAYMENT_SERVICE=payment-service
      - SHIPMENT_SERVICE=shipment-service
      - SENTIMENT_SERVICE=sentiment-service
      - RECOMMENDATION_SERVICE=recommendation-service
      - ML_SERVICE=ml-service
    networks:
      - ecom-net

  customer-service:
    build: customer-service
    ports:
      - "8001:8001"
    volumes:
      - ./customer-service:/app
    command: ./entrypoint.sh
    environment:
      - DB_HOST=db-mysql
      - DB_PORT=3306
      - DB_NAME=customer_db
      - DB_USER=root
      - DB_PASSWORD=15012003
    depends_on:
      - db-mysql
    networks:
      - ecom-net

  db-mysql:
      image: mysql:8.0
      environment:
        MYSQL_ROOT_PASSWORD: 15012003
        MYSQL_DATABASE: customer_db
      volumes:
        - mysql_data:/var/lib/mysql
        - ./docker/mysql/init.sh:/docker-entrypoint-initdb.d/init.sh
      networks:
        - ecom-net

  product-service:
    build: product-service
    restart: always
    ports:
    - "8005:8005"
    environment:
      - DB_HOST=db-mongo
      - DB_PORT=27017
    command: ./entrypoint.sh
    volumes:
      - ./product-service:/app
    depends_on:
      - db-mongo
    networks:
      - ecom-net

  book-service:
    build: book-service
    restart: always
    ports:
    - "8002:8002"
    environment:
      - DB_HOST=db-mongo
      - DB_PORT=27017
    command: ./entrypoint.sh
    volumes:
      - ./book-service:/app
    depends_on:
      - db-mongo
    networks:
      - ecom-net

  shoe-service:
    build: shoe-service
    restart: always
    ports:
      - "8006:8006"
    environment:
      - DB_HOST=db-mongo
      - DB_PORT=27017
    command: ./entrypoint.sh
    volumes:
      - ./shoe-service:/app
    depends_on:
      - db-mongo
    networks:
      - ecom-net

  db-mongo:
    image: mongo:latest
    restart: always
    ports:
     - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 15012003
    volumes:
      - mongo_data:/data/db
    networks:
      - ecom-net

  cart-service:
    build: cart-service
    ports:
      - "8003:8003"
    command: ./entrypoint.sh
    volumes:
      - ./cart-service:/app
    environment:
      - DB_HOST=db-postgres
      - DB_PORT=5432
      - DB_NAME=cart_db
      - DB_USER=postgres
      - DB_PASSWORD=15012003
    depends_on:
      - db-postgres
    networks:
      - ecom-net

  order-service:
    build: order-service
    ports:
      - "8007:8007"
    command: ./entrypoint.sh
    volumes:
      - ./order-service:/app
    environment:
      - DB_HOST=db-postgres
      - DB_PORT=5432
      - DB_NAME=order_db
      - DB_USER=postgres
      - DB_PASSWORD=15012003
    depends_on:
      - db-postgres
    networks:
      - ecom-net

  payment-service:
    build: payment-service
    ports:
      - "8008:8008"
    command: ./entrypoint.sh
    volumes:
      - ./payment-service:/app
    environment:
      - DB_HOST=db-postgres
      - DB_PORT=5432
      - DB_NAME=payment_db
      - DB_USER=postgres
      - DB_PASSWORD=15012003
    depends_on:
      - db-postgres
    networks:
      - ecom-net

  shipment-service:
    build: shipment-service
    ports:
      - "8009:8009"
    command: ./entrypoint.sh
    volumes:
      - ./shipment-service:/app
    environment:
      - DB_HOST=db-postgres
      - DB_PORT=5432
      - DB_NAME=shipment_db
      - DB_USER=postgres
      - DB_PASSWORD=15012003
    depends_on:
      - db-postgres
    networks:
      - ecom-net

  db-postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 15012003
      POSTGRES_DB: cart_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      - ecom-net

  review-service:
    build: review-service
    ports:
      - "8004:8004"
    command: ./entrypoint.sh
    volumes:
      - ./review-service:/app
    environment:
      - DB_HOST=db-mysql
      - DB_PORT=3306
      - DB_NAME=review_db
      - DB_USER=root
      - DB_PASSWORD=15012003
    depends_on:
      - db-mysql
    networks:
      - ecom-net

  sentiment-service:
    build: sentiment-service
    ports:
      - "8010:8010"
    volumes:
      - ./sentiment-service:/app
    environment:
      - PORT=8010
      - HOST=0.0.0.0
      - REVIEW_SERVICE_URL=http://review-service:8004
      - USE_MOCK_DATA=false
      - MOCK_DATA_SIZE=200
      - USE_GPU=false
      - PRELOAD_MULTILINGUAL_MODEL=false
      - USE_FALLBACK_MODEL=true
      - MAX_LENGTH=512
    depends_on:
      - review-service
    networks:
      - ecom-net

  recommendation-service:
    build: ./recommendation-service
    ports:
      - "5002:5000"
    volumes:
      - ./recommendation-service:/app
    environment:
      - DEBUG=True
      - PRODUCT_SERVICE_URL=http://product-service:8005
      - BOOK_SERVICE_URL=http://book-service:8002
      - SHOE_SERVICE_URL=http://shoe-service:8006
      - REVIEW_SERVICE_URL=http://review-service:8004
      - SENTIMENT_SERVICE_URL=http://sentiment-service:8010/api
      - CACHE_ENABLED=True
    depends_on:
      - sentiment-service
      - review-service
      - product-service
      - book-service
      - shoe-service
      - redis-recommendation
    networks:
      - ecom-net

  redis-recommendation:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-recommendation-data:/data
    networks:
      - ecom-net

networks:
  ecom-net:
    driver: bridge

volumes:
  mongo_data:
  postgres_data:
  mysql_data:
  redis-recommendation-data: