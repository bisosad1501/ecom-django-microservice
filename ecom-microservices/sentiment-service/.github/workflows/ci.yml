name: Sentiment Service CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'sentiment-service/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'sentiment-service/**'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sentiment-service

    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    - name: Download NLTK data
      run: |
        python -c "import nltk; nltk.download('stopwords'); nltk.download('punkt')"
    
    - name: Lint with flake8
      run: |
        flake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Type check with mypy
      run: |
        mypy src tests
    
    - name: Test with pytest
      run: |
        pytest --cov=src tests/ --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./sentiment-service/coverage.xml
        flags: unittests
        fail_ci_if_error: false

  build-and-push:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    defaults:
      run:
        working-directory: ./sentiment-service
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract branch name
      shell: bash
      run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
    
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./sentiment-service
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/sentiment-service:${{ env.BRANCH_NAME }}
          ${{ secrets.DOCKERHUB_USERNAME }}/sentiment-service:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/sentiment-service:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/sentiment-service:buildcache,mode=max 