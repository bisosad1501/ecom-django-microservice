load_module /etc/nginx/modules/ngx_http_headers_more_filter_module.so;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Logging Settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log debug;

    # CORS Settings
    map $http_origin $cors_header {
        default "*";
        "http://localhost:3000" "*";
        "http://127.0.0.1:3000" "*";
        "http://localhost:8000" "*";
        "http://127.0.0.1:8000" "*";
        "http://localhost:8080" "*";
        "http://127.0.0.1:8080" "*";
        "http://localhost" "*";
        "http://127.0.0.1" "*";
    }

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

    # DNS resolver
    resolver 127.0.0.11 ipv6=off;

    # Upstream Configuration
    upstream customer-service {
        server customer-service:8001;
    }

    upstream book-service {
        server book-service:8002;
    }

    upstream cart-service {
        server cart-service:8003;
    }

    upstream review-service {
        server review-service:8004;
    }

    upstream product-service {
        server product-service:8005;
    }

    upstream shoe-service {
        server shoe-service:8006;
    }

    upstream order-service {
        server order-service:8007;
    }

    upstream payment-service {
        server payment-service:8008;
    }

    upstream shipment-service {
        server shipment-service:8009;
    }

    upstream sentiment-service {
        server sentiment-service:8010;
    }

    upstream recommendation-service {
        server recommendation-service:8011;
    }

    server {
        listen 80;
        server_name localhost;

        # Xóa bỏ các header CORS từ upstream
        more_clear_headers 'Access-Control-Allow-Origin';
        more_clear_headers 'Access-Control-Allow-Methods';
        more_clear_headers 'Access-Control-Allow-Headers';
        more_clear_headers 'Access-Control-Allow-Credentials';
        more_clear_headers 'Access-Control-Max-Age';

        # Cấu hình CORS mặc định cho tất cả các location
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Origin,Accept,Referer,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform,content-type' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' '1728000' always;

        # Health Check
        location /health {
            access_log off;
            return 200 'healthy\n';
        }

        # Handle OPTIONS method for CORS preflight
        location /api/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Origin,Accept,Referer,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform,content-type' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' '1728000' always;
                add_header 'Content-Type' 'text/plain charset=UTF-8' always;
                add_header 'Content-Length' '0' always;
                return 204;
            }
            return 404 '{"error": "API endpoint not found"}';
        }

        # Product Service
        location = /api/products/ {
            proxy_pass http://product-service/products/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Product Service with ID
        location ~ ^/api/products/(.+)$ {
            proxy_pass http://product-service/products/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Product Service - Specific non-id endpoints like get_categories
        location = /api/products/get_categories/ {
            proxy_pass http://product-service/products/get_categories/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Truy cập trực tiếp Product Service
        location = /products/ {
            proxy_pass http://product-service/products/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Customer Service - User endpoints
        location = /api/users/login/ {
            proxy_pass http://customer-service/user/login/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Customer Service - User endpoints with ID or actions
        location ~ ^/api/users/(.+)$ {
            proxy_pass http://customer-service/user/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Customer Service - Exact user root
        location = /api/users/ {
            proxy_pass http://customer-service/user/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Truy cập trực tiếp User login
        location = /user/login/ {
            proxy_pass http://customer-service/user/login/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Book Service
        location /api/books/ {
            proxy_pass http://book-service/books/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Cart Service - Exact Path (carts-plural)
        location = /api/carts/ {
            proxy_pass http://cart-service/cart/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Cart Service - Exact Path (cart-singular)
        location = /api/cart/ {
            proxy_pass http://cart-service/cart/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Cart Service with path (singular form)
        location ~ ^/api/cart/(.+) {
            proxy_pass http://cart-service/cart/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Cart Service with path (plural form - carts)
        location ~ ^/api/carts/(.+) {
            proxy_pass http://cart-service/cart/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Review Service
        location /api/reviews/ {
            proxy_pass http://review-service/reviews/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Shoe Service
        location /api/shoes/ {
            proxy_pass http://shoe-service/shoes/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Order Service
        location /api/orders/ {
            proxy_pass http://order-service/orders/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Payment Service
        location /api/payments/ {
            proxy_pass http://payment-service/payments/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Shipment Service
        location /api/shipments/ {
            proxy_pass http://shipment-service/shipments/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Sentiment Service
        location /api/sentiments/ {
            proxy_pass http://sentiment-service/sentiments/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Recommendation Service
        location /api/recommendations/ {
            proxy_pass http://recommendation-service/recommendations/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
